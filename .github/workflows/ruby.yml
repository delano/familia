name: Ruby

on:
  push:
    branches:
      - main

  pull_request:

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Ruby ${{ matrix.ruby }}
    continue-on-error: ${{ matrix.ruby == '3.5' }}
    strategy:
      matrix:
        include:
          - ruby: '3.4'
            bundler: latest
            rubygems: latest

          - ruby: '3.3'
            bundler: latest
            rubygems: latest

          - ruby: '3.2'
            bundler: latest
            rubygems: latest

          - ruby: '3.1'
            bundler: latest
            rubygems: latest

          - ruby: '3.5'
            bundler: latest
            rubygems: latest

    services:
      redis:
        image: redis:bookworm@sha256:e422889e156ebea83856b6ff973bfe0c86bce867d80def228044eeecf925592b
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 3s
          --health-retries 5
        ports:
          # https://docs.github.com/en/actions/using-containerized-services/creating-redis-service-containers#running-jobs-in-containers
          # Maps port 6379 on service container to the host
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        rubygems: ${{ matrix.rubygems }}
        bundler: ${{ matrix.bundler }}
        # When the following is true, also run "bundle install",
        # and cache the result automatically. Ran into an issue
        # with the caching and multiple ruby versions. Needs
        # further investigation.
        bundler-cache: false

    - name: Configure Bundler for secure gem installation
      run: |
        bundle config set --local path 'vendor/bundle'
        bundle config set --local deployment 'false'

    - name: Re-run bundle install
      run: bundle install

    - name: Run the tryouts
      run: bundle exec try -v try/*_try.rb
